{"version":3,"sources":["components/constant.js","Algorithms/mergesort.js","Algorithms/quicksort.js","components/NavBar/utils.js","Algorithms/bubblesort.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Glob","AnimSpecs","mergeAnimations","arr","anim","length","temparray","mergeSort","st_ind","end_ind","temp","mid","Math","floor","i","j","k","push","merge","quickAnimations","quickSort","start","end","index","pivotValue","pivotIndex","partition","ResetArray","size","bars","document","getElementsByClassName","style","backgroundColor","max","min","random","SortedArray","bubbleSort","speed","Promise","resolve","reject","animations","flag","t","bubbleAnimations","length1","console","log","arrayBars","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","height","NavBar","setArr","setSize","setSpeed","useState","isSorting","setIsSorting","sortName","setSortName","className","disabled","cursor","onClick","for","type","name","onChange","event","target","value","pivot","pivotStyle","then","l","App","useEffect","map","idx","width","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.777afa98.chunk.js","sourcesContent":["export const Glob = {\r\n  SIZE: 70,\r\n  MAXVALUE: 500,\r\n  MINVALUE: 50,\r\n};\r\n\r\nexport const AnimSpecs = {\r\n  MINSPEED: 1,\r\n  MAXSPEED: 50,\r\n  PRIMARY_COLOR: \"purple\",\r\n  SECONDARY_COLOR: \"red\",\r\n};\r\n","export function mergeAnimations(arr) {\r\n  const anim = [];\r\n  if (arr.length <= 1) return arr;\r\n  const temparray = [...arr];\r\n  mergeSort(arr, 0, arr.length - 1, temparray, anim);\r\n  return anim;\r\n}\r\nfunction mergeSort(arr, st_ind, end_ind, temp, anim) {\r\n  if (st_ind === end_ind) return;\r\n  const mid = Math.floor((st_ind + end_ind) / 2);\r\n  mergeSort(temp, st_ind, mid, arr, anim);\r\n  mergeSort(temp, mid + 1, end_ind, arr, anim);\r\n  merge(arr, st_ind, mid, end_ind, temp, anim);\r\n}\r\n\r\nfunction merge(arr, st_ind, mid, end_ind, temp, anim) {\r\n  let i = st_ind;\r\n  let j = mid + 1;\r\n  let k = st_ind;\r\n  while (i <= mid && j <= end_ind) {\r\n    anim.push([i, j]); //To colour\r\n    anim.push([i, j]); //Back to normal\r\n    if (temp[i] <= temp[j]) {\r\n      anim.push([k, temp[i]]);\r\n      arr[k++] = temp[i++];\r\n    } else {\r\n      anim.push([k, temp[j]]);\r\n      arr[k++] = temp[j++];\r\n    }\r\n  }\r\n  while (i <= mid) {\r\n    anim.push([i, i]);\r\n    anim.push([i, i]);\r\n\r\n    anim.push([k, temp[i]]);\r\n    arr[k++] = temp[i++];\r\n  }\r\n  while (j <= end_ind) {\r\n    anim.push([j, j]);\r\n    anim.push([j, j]);\r\n\r\n    anim.push([k, temp[j]]);\r\n    arr[k++] = temp[j++];\r\n  }\r\n}\r\n","export function quickAnimations(arr) {\r\n  const anim = [];\r\n  if (arr.length <= 1) return arr;\r\n  const temparray = [...arr];\r\n  quickSort(arr, 0, arr.length - 1, temparray, anim);\r\n  return anim;\r\n}\r\n\r\nfunction quickSort(arr, start, end, temparray, anim) {\r\n  if (start >= end) {\r\n    return;\r\n  }\r\n  let index = partition(arr, start, end, temparray, anim);\r\n\r\n  quickSort(arr, start, index - 1, temparray, anim);\r\n  quickSort(arr, index + 1, end, temparray, anim);\r\n}\r\n\r\nfunction partition(temp, start, end, arr, anim) {\r\n  const pivotValue = temp[end];\r\n  let pivotIndex = start;\r\n  for (let i = start; i < end; i++) {\r\n    anim.push([i, pivotIndex, end, 0]);\r\n    if (temp[i] < pivotValue) {\r\n      // Swapping elements\r\n      anim.push([i, pivotIndex, end, 3]);\r\n      [temp[i], temp[pivotIndex]] = [temp[pivotIndex], temp[i]];\r\n      anim.push([i, temp[i], end, 4]);\r\n      anim.push([pivotIndex, temp[pivotIndex], end, 4]);\r\n      anim.push([i, pivotIndex, end, 1]);\r\n      pivotIndex++;\r\n    } else anim.push([i, pivotIndex, end, 1]);\r\n  }\r\n\r\n  // Putting the pivot value in the middle\r\n  anim.push([pivotIndex, end, end, 3]);\r\n  [temp[pivotIndex], temp[end]] = [temp[end], temp[pivotIndex]];\r\n  anim.push([pivotIndex, temp[pivotIndex], end, 4]);\r\n  anim.push([end, temp[end], end, 4]);\r\n  anim.push([pivotIndex, end, end, 1]);\r\n\r\n  return pivotIndex;\r\n}\r\n","import { Glob, AnimSpecs } from \"../constant\";\r\nimport { mergeAnimations } from \"../../Algorithms/mergesort\";\r\nimport { bubbleAnimations } from \"../../Algorithms/bubblesort\";\r\nimport { quickAnimations } from \"../../Algorithms/quicksort\";\r\n\r\nexport function ResetArray(size) {\r\n  const bars = document.getElementsByClassName(\"array-bar\");\r\n  for (var i = 0; i < bars.length; i++) {\r\n    bars[i].style.backgroundColor = AnimSpecs.PRIMARY_COLOR;\r\n  }\r\n  const arr = [];\r\n  const max = Glob.MAXVALUE;\r\n  const min = Glob.MINVALUE;\r\n  for (let i = 0; i < size; i++) {\r\n    arr.push(Math.floor(Math.random() * (max - min + 1) + min));\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function SortedArray() {\r\n  const bars = document.getElementsByClassName(\"array-bar\");\r\n  for (var i = 0; i < bars.length; i++) {\r\n    bars[i].style.backgroundColor = \"green\";\r\n  }\r\n}\r\n\r\n/*export function quickSort() {\r\n  return 0;\r\n}*/\r\n\r\nexport const mergeSort = (arr, speed) => {\r\n  return new Promise((resolve, reject) => {\r\n    const animations = mergeAnimations(arr);\r\n    var length1 = animations.length;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color =\r\n          i % 3 === 0 ? AnimSpecs.SECONDARY_COLOR : AnimSpecs.PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const bubbleSort = (arr, speed) => {\r\n  return new Promise((resolve, reject) => {\r\n    const animations = bubbleAnimations(arr);\r\n    let length1 = animations.length;\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const [barOneIdx, barTwoIdx, flag] = animations[i];\r\n\r\n      if (flag === 0 || flag === 1) {\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color =\r\n          flag === 0 ? AnimSpecs.SECONDARY_COLOR : AnimSpecs.PRIMARY_COLOR;\r\n\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * speed);\r\n      } else if (flag === 3) {\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = \"grey\";\r\n\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * speed);\r\n      } else if (flag === 4) {\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          const newHeight = barTwoIdx;\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          length1--;\r\n          //const newHeight = barTwoIdx;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.backgroundColor = \"green\";\r\n        }, i * speed);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const quickSort = (arr, speed) => {\r\n  return new Promise((resolve, reject) => {\r\n    const animations = quickAnimations(arr);\r\n    let length1 = animations.length;\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const [barOneIdx, barTwoIdx, pivot, flag] = animations[i];\r\n\r\n      if (flag === 0 || flag === 1) {\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const pivotStyle = arrayBars[pivot].style;\r\n        const color =\r\n          flag === 0 ? AnimSpecs.SECONDARY_COLOR : AnimSpecs.PRIMARY_COLOR;\r\n\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          pivotStyle.backgroundColor = \"yellow\";\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * speed);\r\n      } else if (flag === 3) {\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = \"green\";\r\n\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * speed);\r\n      } else if (flag === 4) {\r\n        setTimeout(() => {\r\n          length1--;\r\n          if (length1 === 0) {\r\n            resolve(length1);\r\n          }\r\n          const newHeight = barTwoIdx;\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  });\r\n};\r\n","export function bubbleAnimations(arr) {\r\n  const anim = [];\r\n  if (arr.length <= 1) return arr;\r\n  const temparray = [...arr];\r\n  bubbleSort(arr, temparray, anim);\r\n  return anim;\r\n}\r\nfunction bubbleSort(arr, temp, anim) {\r\n  for (var i = 0; i < arr.length - 1; i++) {\r\n    // Last i elements are already in place\r\n    for (var j = 0; j < arr.length - i - 1; j++) {\r\n      anim.push([j, j + 1, 0]);\r\n      let flag = 0;\r\n      if (temp[j] > temp[j + 1]) {\r\n        flag = 1;\r\n        let t = temp[j];\r\n        temp[j] = temp[j + 1];\r\n        temp[j + 1] = t;\r\n      }\r\n      if (flag === 1) anim.push([j, j + 1, 3]);\r\n      anim.push([j, temp[j], 4]);\r\n      anim.push([j + 1, temp[j + 1], 4]);\r\n      anim.push([j, j + 1, 1]);\r\n    }\r\n    //arr[arr.length - 1 - i] = temp[arr.length - 1 - i];\r\n    anim.push([arr.length - 1 - i, temp[arr.length - 1 - i], 2]);\r\n  }\r\n  anim.push([0, temp[0], 2]);\r\n}\r\n\r\n//   function merge(arr, st_ind, mid, end_ind, temp, anim) {\r\n//     let i = st_ind;\r\n//     let j = mid + 1;\r\n//     let k = st_ind;\r\n//     while (i <= mid && j <= end_ind) {\r\n//       anim.push([i, j]); //To colour\r\n//       anim.push([i, j]); //Back to normal\r\n//       if (temp[i] <= temp[j]) {\r\n//         anim.push([k, temp[i]]);\r\n//         arr[k++] = temp[i++];\r\n//       } else {\r\n//         anim.push([k, temp[j]]);\r\n//         arr[k++] = temp[j++];\r\n//       }\r\n//     }\r\n//     while (i <= mid) {\r\n//       anim.push([i, i]);\r\n//       anim.push([i, i]);\r\n\r\n//       anim.push([k, temp[i]]);\r\n//       arr[k++] = temp[i++];\r\n//     }\r\n//     while (j <= end_ind) {\r\n//       anim.push([j, j]);\r\n//       anim.push([j, j]);\r\n\r\n//       anim.push([k, temp[j]]);\r\n//       arr[k++] = temp[j++];\r\n//     }\r\n//   }\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AnimSpecs, Glob } from \"../constant\";\r\nimport {\r\n  ResetArray,\r\n  quickSort,\r\n  mergeSort,\r\n  bubbleSort,\r\n  SortedArray,\r\n} from \"./utils\";\r\n\r\nconst NavBar = ({ arr, setArr, size, setSize, speed, setSpeed }) => {\r\n  const [isSorting, setIsSorting] = useState(false);\r\n  const [sortName, setSortName] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-center bg-black font-serif text-white text-4xl\">\r\n        Sorting Visualizer\r\n      </div>\r\n      <div className=\"bg-black text-white flex flex-wrap justify-center space-x-8 space-y-2 md:space-x-20  p-4 items-center\">\r\n        <div>\r\n          <button\r\n            disabled={isSorting}\r\n            className=\"border-2 px-2 py-1 font-bold  rounded-md border-white\"\r\n            style={{\r\n              backgroundColor: `${isSorting ? \"red\" : \"green\"}`,\r\n              cursor: `${isSorting ? \"default\" : \"pointer\"}`,\r\n            }}\r\n            onClick={() => {\r\n              setArr(ResetArray(size));\r\n            }}\r\n          >\r\n            Reset Array\r\n          </button>\r\n        </div>\r\n        <div className=\"flex items-center space-x-1 text-xl\">\r\n          <label for=\"speed\">Size</label>\r\n          <input\r\n            disabled={isSorting}\r\n            type=\"range\"\r\n            name=\"size\"\r\n            min=\"5\"\r\n            max={Glob.SIZE}\r\n            onChange={(event) => {\r\n              setSize(event.target.value);\r\n            }}\r\n          ></input>\r\n        </div>\r\n        <div className=\"flex items-center space-x-1 text-xl\">\r\n          <label for=\"speed\">Speed</label>\r\n          <input\r\n            disabled={isSorting}\r\n            name=\"speed\"\r\n            type=\"range\"\r\n            min={AnimSpecs.MINSPEED}\r\n            max={AnimSpecs.MAXSPEED}\r\n            onChange={(event) => {\r\n              setSpeed(\r\n                AnimSpecs.MAXSPEED + AnimSpecs.MINSPEED - event.target.value\r\n              );\r\n            }}\r\n          ></input>\r\n        </div>\r\n        <div className=\"flex justify-center space-x-5\">\r\n          <button\r\n            disabled={isSorting}\r\n            className=\"border-2 px-2 py-1 font-bold  rounded-md border-white\"\r\n            style={{\r\n              backgroundColor: `${isSorting ? \"red\" : \"blue\"}`,\r\n              color: `${sortName === \"quick\" ? \"black\" : \"white\"}`,\r\n              cursor: `${isSorting ? \"default\" : \"pointer\"}`,\r\n            }}\r\n            onClick={() => {\r\n              setIsSorting(true);\r\n              setSortName(\"quick\");\r\n              quickSort(arr, speed).then((l) => {\r\n                if (l === 0) {\r\n                  setIsSorting(false);\r\n                  setSortName(\"\");\r\n                  SortedArray();\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Quick Sort\r\n          </button>\r\n          <button\r\n            disabled={isSorting}\r\n            className=\"border-2 px-2 py-1 font-bold  rounded-md border-white\"\r\n            style={{\r\n              backgroundColor: `${isSorting ? \"red\" : \"blue\"}`,\r\n              color: `${sortName === \"merge\" ? \"black\" : \"white\"}`,\r\n              cursor: `${isSorting ? \"default\" : \"pointer\"}`,\r\n            }}\r\n            onClick={() => {\r\n              setIsSorting(true);\r\n              setSortName(\"merge\");\r\n              mergeSort(arr, speed).then((l) => {\r\n                if (l === 0) {\r\n                  setIsSorting(false);\r\n                  setSortName(\"\");\r\n                  SortedArray();\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Merge Sort\r\n          </button>\r\n          <button\r\n            disabled={isSorting}\r\n            className=\"border-2 px-2 py-1 font-bold  rounded-md border-white\"\r\n            style={{\r\n              backgroundColor: `${isSorting ? \"red\" : \"blue\"}`,\r\n              color: `${sortName === \"bubble\" ? \"black\" : \"white\"}`,\r\n              cursor: `${isSorting ? \"default\" : \"pointer\"}`,\r\n            }}\r\n            onClick={() => {\r\n              setIsSorting(true);\r\n              setSortName(\"bubble\");\r\n              bubbleSort(arr, speed).then((l) => {\r\n                console.log(\"length \", l);\r\n                if (l === 0) {\r\n                  setIsSorting(false);\r\n                  setSortName(\"\");\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            Bubble Sort\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import \"./App.css\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ResetArray } from \"./components/NavBar/utils\";\r\nimport { AnimSpecs, Glob } from \"./components/constant\";\r\nimport \"./tailwind.min.css\";\r\nfunction App() {\r\n  const [arr, setArr] = useState([]);\r\n  const [size, setSize] = useState(Glob.SIZE);\r\n  const [speed, setSpeed] = useState(AnimSpecs.MINSPEED);\r\n  useEffect(() => {\r\n    setArr(ResetArray(size));\r\n  }, [size]);\r\n  return (\r\n    <div className=\"App h-screen font-serif\">\r\n      <NavBar\r\n        arr={arr}\r\n        setArr={setArr}\r\n        size={size}\r\n        setSize={setSize}\r\n        speed={speed}\r\n        setSpeed={setSpeed}\r\n      />\r\n      <div className=\"p-5 flex justify-center \">\r\n        {arr.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar ml-1 inline-block text-white \"\r\n            key={idx}\r\n            style={{\r\n              backgroundColor: AnimSpecs.PRIMARY_COLOR,\r\n              height: `${value}px`,\r\n              width: `${100 - size}px`,\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div className=\"font-serif fixed bottom-0 right-0 hidden md:block\">\r\n        &copy; Developed by{\" \"}\r\n        <a\r\n          className=\"text-blue-600\"\r\n          href=\"https://in.linkedin.com/in/rahul130500\"\r\n        >\r\n          Rahul Aggarwal\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}